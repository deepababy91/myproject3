{"version":3,"sources":["components/TodoContext.js","components/TodoFormInput.js","components/TodoListItem.js","components/TodoList.js","components/Filter.js","Todo.js","Signup.js","Contact.js","Header.js","App.js","reportWebVitals.js","index.js"],"names":["DataContext","createContext","TodoContext","props","useState","todos","setTodos","useEffect","todoLocalstorage","JSON","parse","localStorage","getItem","setItem","stringify","Provider","value","children","TodoFormInput","useContext","todoName","setTodoName","autoComplete","onSubmit","e","preventDefault","name","complete","type","id","required","placeholder","onChange","target","title","PlusCircleOutlined","style","fontSize","color","ListItem","todo","checkComplete","handleEditTodos","onEdit","setOnEdit","editValue","setEditValue","SaveOutlined","onClick","handleSave","className","htmlFor","checked","EditOutlined","onConfirm","newTodos","splice","deleteTask","okText","cancelText","DeleteOutlined","cursor","TodoList","console","log","switchComplete","forEach","index","map","Filter","checkAll","setCheckAll","TabPane","Tabs","Demo","defaultActiveKey","tab","paddingBottom","wordBreak","paddingRight","filteredTodo","listStyle","textTransform","fontFamily","fontWeight","filter","length","description","notification","open","message","width","marginBottom","borderRadius","placement","Todo","Signup","formik","useFormik","initialValues","full_name","email","password","confirm_password","validationSchema","Yup","min","max","oneOf","values","alert","handleSubmit","handleChange","errors","touched","Button","Contact","subject","content","setSubmitting","setTimeout","isSubmitting","height","as","Header","Navbar","expand","Toggle","aria-controls","Collapse","Nav","to","Link","App","exact","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.641d10d9.chunk.js","sourcesContent":["import React, {useState,useEffect,createContext} from 'react'\r\n\r\nexport const DataContext=createContext();\r\n\r\nexport const TodoContext=(props)=>{\r\n\r\n    const [todos,setTodos]=useState([])\r\n\r\n    //the below code is to retain the todolist even after the page refresh\r\n    useEffect(()=>{\r\n        const todoLocalstorage=JSON.parse(localStorage.getItem('todoLocalstorage'))//The getItem() method of the Storage interface, when passed a key name, will return that key's value, or null if the key does not exist, in the given Storage object.\r\n        if(todoLocalstorage) setTodos(todoLocalstorage)\r\n    },[])\r\n     useEffect(() =>{\r\n     localStorage.setItem('todoLocalstorage',JSON.stringify(todos))//The setItem() method of the Storage interface, when passed a key name and value, will add that key to the given Storage object, or update that key's value if it already exists.\r\n    },[todos])\r\n    \r\n    return (\r\n        <DataContext.Provider value={[todos,setTodos]}>\r\n            {props.children}\r\n        </DataContext.Provider>\r\n             \r\n    )\r\n}\r\n","import React,{useState,useContext} from 'react'\r\nimport {DataContext} from './TodoContext'\r\nimport {PlusCircleOutlined} from '@ant-design/icons';\r\nimport { Tooltip} from 'antd';\r\n\r\nfunction TodoFormInput() {\r\n    const [todos,setTodos]=useContext(DataContext);\r\n    const [todoName,setTodoName]=useState('');\r\n    const addTodo=e=>{\r\n        e.preventDefault();\r\n        setTodos([...todos,{name:todoName,complete:false}])\r\n        setTodoName('');//to clear the input field after submitting the form\r\n    }\r\n\r\n   \r\n    return (\r\n       \r\n             <form autoComplete=\"off\" onSubmit={addTodo} >\r\n      <input type=\"text\" name=\"todos\" id=\"todos\" required placeholder=\"Enter a Task...\" value={todoName}\r\n      onChange={e=>setTodoName(e.target.value)} />\r\n      <button type=\"submit\" >\r\n      <Tooltip title=\"Click here to add the task\">\r\n      <PlusCircleOutlined  style={{ fontSize: '25px', color: 'white' }}/> \r\n      </Tooltip>\r\n      </button>\r\n      </form>\r\n      \r\n    )\r\n}\r\n\r\nexport default TodoFormInput","import React from 'react'\r\nimport {useState,useContext} from 'react'\r\nimport {EditOutlined,SaveOutlined,DeleteOutlined} from '@ant-design/icons';\r\nimport {DataContext} from './TodoContext'\r\nimport {Popconfirm} from 'antd';\r\n\r\nexport default function ListItem({todo,id,checkComplete,handleEditTodos}) {\r\n    const [onEdit,setOnEdit]=useState(false)\r\n    const [editValue,setEditValue]=useState(todo.name)\r\n    const [todos,setTodos]=useContext(DataContext)//using context from TodoContext component\r\n\r\n    const handleOnEdit = ()=>{\r\n        setOnEdit(true)\r\n    } \r\n    const handleSave=id=>{\r\n        setOnEdit(false)\r\n        if(editValue){\r\n            handleEditTodos(editValue,id)\r\n        }else{\r\n            setEditValue(todo.name)\r\n        }\r\n    }\r\n    //deleteTask function to delete each task\r\n    const deleteTask=(id)=>{\r\n    const newTodos = [...todos];\r\n    newTodos.splice(id, 1);\r\n    setTodos(newTodos);  \r\n    }\r\n    //if on edit mode, user can edit the task and click on save icon(from antd).Edit and save is disabled for completed task\r\n    if(onEdit)\r\n    {\r\n    return(\r\n         <li>\r\n           <input type=\"text\" id=\"editValue\" value={editValue} name=\"editValue\" onChange={e =>setEditValue(e.target.value)} />\r\n            <SaveOutlined onClick={()=>handleSave(id)} style={{color:'purple',fontSize:'20px'}} className={todo.complete?\"disabled1\":\"\"} />\r\n         </li>\r\n          )\r\n    }\r\n    //if not on edit ,will display edit icon and delete icon,those will be disabled if the task got completed\r\n    else{\r\n    return (\r\n         <li>\r\n           <label htmlFor={id} className={todo.complete?\"active\":\"\"}>\r\n           <input type=\"checkbox\" id={id} checked={todo.complete} onChange={() =>checkComplete(id)}/>{todo.name}\r\n          </label>\r\n             <span>\r\n                <EditOutlined  className={todo.complete?\"disabled1\":\"\"} onClick={handleOnEdit} style={{color:'dodgerblue',fontSize:'20px'}}/>{' '}\r\n        {/*Popconfirm from antd to confirm whether the user want to delete the task or not,while on confirm it will exceute deleteTask function*/}\r\n                <Popconfirm\r\n                          title=\"Are you sure you want to delete this task?\"\r\n                          onConfirm={()=>deleteTask(id)}\r\n                          // onCancel={cancel}\r\n                          okText=\"Yes\"\r\n                          cancelText=\"No\"\r\n                >\r\n        <DeleteOutlined className={todo.complete?\"disabled1\":\"\"} style={{color:'red',fontSize:'18px',cursor:'pointer'}}/>  </Popconfirm></span>\r\n        </li>       \r\n           )\r\n         }\r\n }\r\n","import React, {useContext} from 'react'\r\nimport TodoListItem from './TodoListItem'\r\nimport {DataContext} from './TodoContext'\r\n\r\nexport default function TodoList() {\r\n    const [todos,setTodos]=useContext(DataContext);\r\n    console.log(todos)\r\n    \r\n    const switchComplete=id=>{\r\n        const newTodos=[...todos]\r\n        newTodos.forEach((todo,index)=>{\r\n            if(index===id){\r\n                todo.complete= !todo.complete\r\n            }    \r\n    })\r\n    setTodos(newTodos)\r\n}\r\n\r\n    const handleEditTodos=(editValue,id)=>{\r\n        const newTodos=[...todos]\r\n        newTodos.forEach((todo,index) =>{\r\n            if(index===id){\r\n                todo.name=editValue\r\n            }\r\n        })\r\n        setTodos(newTodos)\r\n    }\r\n\r\n    return (\r\n    <ul>\r\n        {\r\n            todos.map((todo,index) => (\r\n                <TodoListItem todo={todo} key={index} id={index} \r\n                checkComplete={switchComplete} handleEditTodos={handleEditTodos}/>\r\n            ))\r\n        }\r\n        </ul>\r\n    )\r\n}\r\n","import React, {useContext,useState} from 'react'\r\nimport {DataContext} from './TodoContext'\r\nimport {Popconfirm,Tooltip,Empty,Button, notification,Tabs } from 'antd';\r\n\r\n\r\nfunction Filter() {\r\n    const [checkAll,setCheckAll]=useState(false)\r\n    const [todos,setTodos]=useContext(DataContext)//using context from TodoContext\r\n  \r\n   \r\n      const handleCheckAll = () =>{\r\n        const newTodos=[...todos]\r\n        newTodos.forEach(todo=>{\r\n        todo.complete= !checkAll\r\n        })\r\n        setTodos(newTodos)\r\n        setCheckAll(!checkAll)\r\n    }\r\n    \r\n    //function to filter only active todos or not completed todos\r\n     const newTodosComplete=()=>{\r\n        return todos.filter(todo=>todo.complete===false)\r\n    }\r\n    \r\n    //function to filter completed todos\r\n    const completed=()=>{\r\n       return todos.filter(todo=>todo.complete===true) \r\n    }\r\n   \r\n    //function to delete all todos.\r\n     const deleteTodo = (id)=>{\r\n        const newTodos=[...todos]\r\n        newTodos.splice(id, todos.length);\r\n        setTodos(newTodos)\r\n    }\r\n   //antd notification function to show the completed and active tasks\r\n   const openNotification = () => {\r\n       \r\n   notification.open({\r\n    \r\n    message: <h3 style={{fontFamily: 'Oleo Script',color:'orange'}}>Hey,your task status</h3>,\r\n    description:\r\n      <p>You have {newTodosComplete().length} active tasks and {completed().length} completed tasks</p>,\r\n  \r\n     });\r\n    }\r\n    //antd Tab component to show all,active and completed filters,I added styling to the filtered results\r\n      const { TabPane } = Tabs;\r\n \r\n    const Demo = () => (\r\n    <Tabs defaultActiveKey=\"1\" type=\"card\">\r\n    <TabPane tab=\"All\" key=\"1\" >\r\n        <div style={{paddingBottom:'25px', wordBreak:'break-word',paddingRight:'35px'}}>\r\n      {todos.map((filteredTodo,id) => (\r\n        <li key={id} style={{listStyle:'circle',textTransform:'capitalize',fontSize:'16px',fontFamily: 'Oleo Script',fontWeight:'normal'}}>\r\n          {filteredTodo.name}\r\n        </li>\r\n      ))}\r\n    </div>\r\n    </TabPane>\r\n    <TabPane tab=\"Active\" key=\"2\" >\r\n     <div style={{paddingBottom:'25px'}}>\r\n      {todos.filter(todo => todo.complete===false).map((filteredTodo,id) => (\r\n        <li key={id}style={{color:'darkblue',listStyle:'circle',textTransform:'capitalize',fontSize:'16px',fontFamily: 'Oleo Script',fontWeight:'normal'}}>\r\n          {filteredTodo.name}\r\n        </li>\r\n      ))}\r\n    </div>\r\n    </TabPane>\r\n    <TabPane tab=\"Completed\" key=\"3\" >\r\n       <div style={{paddingBottom:'25px'}}>\r\n      {todos.filter(todo => todo.complete===true).map((filteredTodo,id) => (\r\n        <li key={id} style={{color:'green',listStyle:'circle',textTransform:'capitalize',fontSize:'16px',fontFamily: 'Oleo Script',fontWeight:'normal'}}>\r\n          {filteredTodo.name}\r\n        </li>\r\n      ))}\r\n    </div>\r\n    </TabPane>\r\n  </Tabs>\r\n);\r\n\r\n\r\n    return (    \r\n        <div>\r\n        {/*if no tasks show empty component from antd else show the task status, clear all,mark all complete ,filter sections*/} \r\n        {todos.length===0? \r\n      <div className=\"empty\"><Empty description=\"Nothing to do\"/></div>:\r\n     <div className=\"row\">\r\n    \r\n     {/*Tab component*/}\r\n    <Demo/>\r\n     <Button type=\"primary\" onClick={openNotification} style={{width:'96%',marginBottom:'20px',borderRadius:'20px'}}>\r\n  Click to know about the task status\r\n  </Button>\r\n    \r\n     \r\n{/*Popconfirm display to make sure whether the user want to delete all the items,onConfirm use deleteTodo function whenever user click yes */}\r\n           <Popconfirm\r\n                         title=\"Are you sure you want to delete all tasks?\"\r\n                         onConfirm={deleteTodo}\r\n                         // onCancel={cancel}\r\n                          okText=\"Yes\"\r\n                          cancelText=\"No\"\r\n                      >\r\n     \r\n      <button id=\"delete\" style={{width:'96%',borderRadius:'20px'}} >Clear all</button>\r\n     </Popconfirm>\r\n     {/*User select checkbox to mark all tasks complete*/}\r\n        <label htmlFor=\"all\" className=\"allinput\">\r\n      <Tooltip placement=\"left\" title=\"Check to complete all tasks and uncheck to make it active again\"><input type=\"checkbox\" name=\"all\" id=\"all\"\r\n      onChange={handleCheckAll} checked={checkAll} /></Tooltip>Mark all complete \r\n       </label>\r\n      </div> \r\n        }   \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Filter","import React from 'react'\r\nimport './App.css';\r\nimport TodoFormInput from './components/TodoFormInput'\r\nimport TodoList from './components/TodoList'\r\nimport Filter from './components/Filter'\r\nimport {TodoContext} from './components/TodoContext'\r\nimport './index.css';\r\n\r\nfunction Todo() {\r\n   return (\r\n    <TodoContext>\r\n    <div className=\"Todo\">\r\n      <TodoFormInput/>\r\n      <TodoList/>\r\n      <Filter/>              \r\n    </div>\r\n    </TodoContext>\r\n  );\r\n}\r\n\r\nexport default Todo;","import React from \"react\";\r\nimport { useFormik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport { Button } from 'react-bootstrap';\r\n\r\nexport default function Signup() {\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      full_name: \"\",\r\n      email: \"\",\r\n      password: \"\",\r\n      confirm_password: \"\"\r\n    },\r\n    validationSchema: Yup.object({\r\n      full_name: Yup.string()\r\n        .min(2, \"Mininum 2 characters\")\r\n        .max(15, \"Maximum 15 characters\")\r\n        .required(\"Required!\"),\r\n      email: Yup.string()\r\n        .email(\"Invalid email format\")\r\n        .required(\"Required!\"),\r\n      password: Yup.string()\r\n        .min(8, \"Minimum 8 characters\")\r\n        .required(\"Required!\"),\r\n      confirm_password: Yup.string()\r\n        .oneOf([Yup.ref(\"password\")], \"Password's not match\")\r\n        .required(\"Required!\")\r\n    }),\r\n    onSubmit: values => {\r\n      alert(JSON.stringify(values, null, 2));\r\n    }\r\n  });\r\n\r\n  return (\r\n    <div>\r\n      <h1 style={{color:'rgb(209, 193, 193)' }} className=\"signup\">Sign up</h1>\r\n\r\n      <form onSubmit={formik.handleSubmit} className=\"signupform\">\r\n        <div>\r\n          <label className=\"formlabel\">Full Name</label>\r\n          <input className=\"forminput\"\r\n            type=\"text\"\r\n            name=\"full_name\"\r\n            value={formik.values.full_name}\r\n            onChange={formik.handleChange}\r\n          />\r\n          {formik.errors.full_name && formik.touched.full_name && (\r\n            <p className=\"formp\">{formik.errors.full_name}</p>\r\n          )}\r\n        </div>\r\n        <div>\r\n          <label className=\"formlabel\">Email</label>\r\n          <input className=\"forminput\"\r\n            type=\"email\"\r\n            name=\"email\"\r\n            value={formik.values.email}\r\n            onChange={formik.handleChange}\r\n          />\r\n          {formik.errors.email && formik.touched.email && (\r\n            <p className=\"formp\">{formik.errors.email}</p>\r\n          )}\r\n        </div>\r\n        <div>\r\n          <label className=\"formlabel\">Password</label>\r\n          <input className=\"forminput\"\r\n            type=\"password\"\r\n            name=\"password\"\r\n            value={formik.values.password}\r\n            onChange={formik.handleChange}\r\n          />\r\n          {formik.errors.password && formik.touched.password && (\r\n            <p className=\"formp\">{formik.errors.password}</p>\r\n          )}\r\n        </div>\r\n        <div>\r\n          <label className=\"formlabel\">Confirm Password</label>\r\n          <input className=\"forminput\"\r\n            type=\"password\"\r\n            name=\"confirm_password\"\r\n            value={formik.values.confirm_password}\r\n            onChange={formik.handleChange}\r\n          />\r\n          {formik.errors.confirm_password &&\r\n            formik.touched.confirm_password && (\r\n              <p className=\"formp\">{formik.errors.confirm_password}</p>\r\n            )}\r\n        </div>\r\n        <div>\r\n        <br/>\r\n      {/*react bootstrap button for submitting the form and added some styles to it*/}\r\n        <Button color=\"primary\" type=\"submit\" style={{fontFamily:'Oleo Script'}}>Submit</Button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n}","import React from 'react'\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { Formik, Field, Form } from 'formik';\r\nimport { Button } from 'react-bootstrap';\r\n\r\n\r\nexport default function Contact() {\r\n  return (\r\n    <div>\r\n        <h1 className=\"signup\" style={{color:'rgb(209, 193, 193)'}}>Contact Us</h1>\r\n      <Formik\r\n            initialValues={{ name: '', email: '', subject: '', content: '' }}\r\n            onSubmit={(values, { setSubmitting }) => {\r\n                setTimeout(() => {\r\n                    alert(JSON.stringify(values, null, 2));\r\n                    setSubmitting(false);\r\n                }, 1000);\r\n            }}\r\n        >\r\n            {({ isSubmitting }) => (\r\n                <Form className=\"signupform\">\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"name\" className=\"formlabel\" >Name</label>\r\n                        <Field name=\"name\" className=\"form-control\" type=\"text\" required style={{height:'30px'}}/>\r\n                    </div>\r\n\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"email\" className=\"formlabel\">Email Address</label>\r\n                        <Field name=\"email\" className=\"form-control\" type=\"email\" required style={{height:'30px'}} />\r\n                    </div>\r\n\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"subject\" className=\"formlabel\">Subject</label>\r\n                        <Field name=\"subject\" className=\"form-control\" type=\"text\" required style={{height:'30px'}}/>\r\n                    </div>\r\n\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"content\" className=\"formlabel\">Content</label>\r\n                        <Field name=\"content\" className=\"form-control\" as=\"textarea\" required/>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                    <Button color=\"primary\" type=\"submit\" style={{fontFamily:'Oleo Script'}}>Submit</Button>\r\n                    </div>\r\n                </Form>\r\n            )}\r\n        </Formik>\r\n        </div>\r\n    );\r\n};\r\n ","import React from 'react'\r\nimport {Navbar, Nav} from 'react-bootstrap'\r\nimport {LinkContainer} from 'react-router-bootstrap'\r\n\r\nconst Header= () => {\r\n    return (\r\n       //using reactt bootstrap navigation bar \r\n        <Navbar className=\"color-nav\"  expand=\"lg\" >\r\n      <h2>Mytodoapp</h2>\r\n      {/*<LinkContainer to=\"/\">\r\n  <Navbar.Brand>My Todoapp</Navbar.Brand>\r\n    </LinkContainer>*/}\r\n  <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n  <Navbar.Collapse id=\"basic-navbar-nav\">\r\n  {/*ml-auto will pull your navbar-nav to the right*/}\r\n    <Nav className=\"ml-auto\" style={{fontSize:'20px'}}>\r\n        <LinkContainer to=\"/\">\r\n      <Nav.Link></Nav.Link>\r\n      </LinkContainer>\r\n      <LinkContainer to=\"/signup\">\r\n      <Nav.Link>Sign in</Nav.Link>\r\n      </LinkContainer>\r\n      <LinkContainer to=\"/todo\">\r\n      <Nav.Link>Todos</Nav.Link>\r\n      </LinkContainer>\r\n      <LinkContainer to=\"/contact\">\r\n      <Nav.Link>Contact</Nav.Link>\r\n      </LinkContainer>\r\n    </Nav>\r\n  </Navbar.Collapse>\r\n</Navbar>\r\n    )\r\n}\r\nexport default Header","import React from 'react';\nimport './App.css';\nimport Todo from './Todo';\nimport Signup from './Signup';\nimport Contact from './Contact';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'antd/dist/antd.css';\nimport Header from './Header'\nimport 'antd/dist/antd.css';\n\n\n//Using HashRouter instead of BrowserRouter to avoid 404 error while refreshing pages using the github page site link\nimport { HashRouter as Router, Switch, Route,Redirect } from 'react-router-dom';\n\nfunction App() {\n  return (\n    <Router>\n      <div className=\"App\">\n        <Header/>\n        <Switch>\n        {/*I am using the same signup page component as my home page('/') and also as a navlink('/signup) to avoid creating another homepage component*/}\n          <Route exact path=\"/\" component={Signup}/>\n          <Route path=\"/signup\" component={Signup} />\n          <Route path=\"/todo\" component={Todo} />\n          <Route path=\"/contact\" component={Contact} />\n          {/*If anything other than the above mentioned paths write after the '/' then I need to redirect it to the '/' page which I set to signup page here */}\n          <Redirect to=\"/\" />\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n\n"],"sourceRoot":""}